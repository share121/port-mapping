name: Build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build:
          - linux-arm64
          - linux-32bit
          - linux-64bit
          - macos-arm64
          - macos-64bit
          - windows-64bit
          - windows-32bit
          - windows-arm64
        include:
          - build: linux-arm64
            os: ubuntu-22.04-arm
            target: aarch64-unknown-linux-musl
            archive-name: port-mapping-linux-arm64
          - build: linux-32bit
            os: ubuntu-22.04
            target: i686-unknown-linux-musl
            archive-name: port-mapping-linux-32bit
          - build: linux-64bit
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            archive-name: port-mapping-linux-64bit
          - build: macos-arm64
            os: macos-14
            target: aarch64-apple-darwin
            archive-name: port-mapping-macos-arm64
          - build: macos-64bit
            os: macos-14
            target: x86_64-apple-darwin
            archive-name: port-mapping-macos-64bit
          - build: windows-64bit
            os: windows-2019
            target: x86_64-pc-windows-msvc
            archive-name: port-mapping-windows-64bit
          - build: windows-32bit
            os: windows-2019
            target: i686-pc-windows-msvc
            archive-name: port-mapping-windows-32bit
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies (linux 32bit only)
        if: matrix.build == 'linux-32bit'
        run: |
          sudo apt update
          sudo apt install gcc-multilib
          sudo apt install libc6-dev-i386

      - name: Configure sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Set Rust Caching Env
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Make output folder
        run: |
          mkdir port-mapping
          cp mapping.txt port-mapping

      - name: Copy target to folder (Windows)
        if: contains(matrix.build, 'windows')
        run: cp target/${{ matrix.target }}/release/port-mapping.exe port-mapping

      - name: Copy target to folder (Non-Windows)
        if: ${{ !contains(matrix.build, 'windows') }}
        run: cp target/${{ matrix.target }}/release/port-mapping port-mapping

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: port-mapping

      - name: Create ZIP (Windows)
        if: contains(matrix.build, 'windows')
        run: Compress-Archive -Path port-mapping -DestinationPath ${{ matrix.archive-name }}.zip

      - name: Create ZIP (Non-Windows)
        if: ${{ !contains(matrix.build, 'windows') }}
        run: zip -r -9 ${{ matrix.archive-name }}.zip port-mapping

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.archive-name }}.zip
